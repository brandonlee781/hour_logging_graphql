extend type Query {
  # Get all Logs in the database
  allLogs(options: QueryOptions): AllLogsPayload!
  # Get a single Log from the database by its UUID
  oneLog(input: OneLogInput!): OneLogPayload!
  # Get all Logs associated with a specific Project by the project's name
  allLogsByProjectName(
    input: AllLogsByProjectNameInput!,
    options: QueryOptions
  ): AllLogsByProjectNamePayload!
  # Get all Logs associated with a specific Project by the project's UUID
  allLogsByProjectId(
    input: AllLogsByProjectIdInput!,
    options: QueryOptions
  ): AllLogsByProjectIdPayload!
}

type AllLogsPayload {
  logs: [Log!]!
}

input OneLogInput {
  id: String!
}
type OneLogPayload {
  log: Log!
}

input AllLogsByProjectNameInput {
  name: String!
}
type AllLogsByProjectNamePayload {
  logs: [Log!]!
}

input AllLogsByProjectIdInput {
  id: String!
}
type AllLogsByProjectIdPayload {
  logs: [Log!]!
}